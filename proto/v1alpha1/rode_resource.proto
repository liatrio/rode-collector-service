// Copyright 2021 The Rode Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package rode.v1alpha1;

option go_package = "github.com/rode/rode/proto/v1alpha1";

import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";

enum ResourceType {
  RESOURCE_TYPE_UNSPECIFIED = 0;
  DOCKER = 1;
  GIT = 2;
  MAVEN = 3;
  FILE = 4;
  NPM = 5;
  NUGET = 6;
  PIP = 7;
  DEBIAN = 8;
  RPM = 9;
}

message Resource {
  // Id represents the unique id of the resource. This is usually the resource prefix plus the name, except in the
  // case of Docker images. The id is used as a parameter for the ListResourceVersions RPC.
  string id = 1;

  // Name represents the name of this resource as seen on the UI.
  string name = 2;

  // Type represents the resource type for this resource, such as "DOCKER" or "GIT"
  ResourceType type = 3;

  google.protobuf.Timestamp created = 4;
}

message ResourceVersion {
  // Version represents the unique artifact version as a fully qualified URI.
  // Example: a Docker image version might look like this: harbor.liatr.io/rode-demo/node-app@sha256:a235554754f9bf075ac1c1b70c224ef5997176b776f0c56e340aeb63f429ace8
  string version = 1;

  // Names represents related artifact names, if they exist. This information will be sourced from build occurrences.
  // Example: a Docker image name might look like this: harbor.liatr.io/rode-demo/node-app:latest
  repeated string names = 2;

  google.protobuf.Timestamp created = 3;
}

// ResourceEvaluation describes the result of a request to evaluate a particular resource version against a group of policies.
message ResourceEvaluation {
  // Id represents the unique identifier (UUID) for this particular resource evaluation.
  string id = 1;

  // Pass represents the overall status for this resource evaluation. This is determined by looking at each policy evaluation
  // result and performing an AND on each one. If Pass is true, this means that the referenced resource version passed each
  // policy within the policy group at the time that the evaluation was performed.
  bool pass = 2;

  // Source represents the source of the resource evaluation request. This should be set by the enforcer or entity performing
  // the request.
  ResourceEvaluationSource source = 3;

  google.protobuf.Timestamp created = 4;

  // ResourceVersion represents the specific resource version that was evaluated in this request.
  ResourceVersion resource_version = 5;

  // PolicyGroupId represents the ID of the policy group that was evaluated in this request.
  string policy_group_id = 6;
}

message ResourceEvaluationSource {
  string name = 1;
  string url = 2;
}

message ListResourcesRequest {
  string filter = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message ListResourcesResponse {
  repeated Resource resources = 1;
  string next_page_token = 2;
}

message ListResourceVersionsRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  string filter = 2;

  int32 page_size = 3;
  string page_token = 4;
}

message ListResourceVersionsResponse {
  repeated ResourceVersion versions = 1;
  string next_page_token = 2;
}
